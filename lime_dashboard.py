# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Vp7GWJ8wQHyRmtLNbteGR-u_E0nCw9ck
"""

import streamlit as st
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from lime.lime_tabular import LimeTabularExplainer
import matplotlib.pyplot as plt

# --- 1. Cargar datos ---
st.title("🧠 LIME Dashboard: Explicación de Costos en Actividades")

@st.cache_data
def cargar_datos():
    df = pd.read_csv("datos_actividades.csv")  # Asegúrate de que este archivo esté junto al script
    return df

df = cargar_datos()

# --- 2. Seleccionar actividad ---
st.sidebar.subheader("📌 Selección de actividad")
idx = st.sidebar.slider("Índice de actividad", 0, len(df) - 1, 0)

# --- 3. Preparar datos ---
X = df[['Budget', 'Time invested', 'Type', 'Moment', 'No. of people']]
y = df['Cost']

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)
model = LinearRegression().fit(X_train, y_train)

# --- 4. Mostrar datos de la instancia seleccionada ---
actividad = df.iloc[idx]
x_instance = X.iloc[idx].values.reshape(1, -1)

st.subheader("📋 Detalles de la actividad seleccionada")
st.write(actividad[['Name of the activity', 'Cost', 'Budget', 'Time invested', 'Type', 'Moment', 'No. of people']])

pred = model.predict(x_instance)[0]
st.metric("💸 Costo predicho", f"${pred:.2f}")
st.metric("📊 Costo real", f"${actividad['Cost']:.2f}")

# --- 5. Explicación con LIME ---
explainer = LimeTabularExplainer(
    training_data=X.values,
    feature_names=X.columns.tolist(),
    mode='regression'
)

exp = explainer.explain_instance(X.iloc[idx].values, model.predict, num_features=5)

st.subheader("🔍 Explicación local (LIME)")
for feature, weight in exp.as_list():
    signo = "⬆️" if weight > 0 else "⬇️"
    st.write(f"{signo} **{feature}** → {weight:.2f}")

# --- 6. Gráfico ---
fig = exp.as_pyplot_figure()
st.pyplot(fig)

# --- 7. Reflexión guiada (opcional) ---
with st.expander("🧠 Reflexión personal (opcional)"):
    st.write("¿Qué aprendiste de esta explicación?")
    st.text_area("Escribe aquí tu reflexión:", "")